#!/bin/bash
#
# This is intended to copy a database from one cluster to another copnsidering the following
#
# * The database is small enough to make this practical as it does not use DistCP
#   For a robust solution, use Cloudera Manager BDR
# * Source (SRC) and Target (TGT) databases can BOTH be accessed from the same machine using Beeline
# * Authentication mechanism is already setup 
#
#FILES
DESCRIBE=describe.hql
OBJ_INFO=objects.dat

#VARS
SRC_JDBC='jdbc:hive2://c1402-node2.coelab.cloudera.com:2181,c1402-node3.coelab.cloudera.com:2181,c1402-node4.coelab.cloudera.com:2181/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2-interactive'
SRC_DB='source'
TGT_JDBC='jdbc:hive2://c1402-node2.coelab.cloudera.com:2181,c1402-node3.coelab.cloudera.com:2181,c1402-node4.coelab.cloudera.com:2181/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2-interactive'
TGT_DB='target'

#FUNCTIONS
BeeLine (){
   jdbc="$1"
   exec="$2"
   file=$3
   [ "${exec}" ] && beeline -u "${jdbc}" --outputformat=dsv --silent=true --showHeader=false -e "${exec};"
   [ "${file}" ] && beeline -u "${jdbc}" --outputformat=dsv --silent=true --showHeader=false -f ${file}
   status=$?
}

procObj (){
   infoFile=$1
   objName=${infoFile/_objects.dat/}
   objDdl=$(sed -n '/--- OBJECT:/,/^--- DESCRIBE FORMATTED ---/p' ${infoFile} | sed -e '1d;$d')
   isPartitoned=$(sed -n '/Partition Information/,/Detailed Table Information/p' ${infoFile} | sed -e '/^#/d;/^|/d')
   if [ "${isPartitoned}" ]; then
      objParts="
      #WIP
   else
      objDataDdl="SELECT * FROM ${objName};"
      #WIP
   fi
}

#MAIN
TABLES=$(BeeLine "${SRC_JDBC}" "USE ${SRC_DB}; SHOW TABLES;")
[ -z "${tables}" ] && echo "ERROR: No tables returned for DB: ${SRC_DB}" && exit 1
echo "USE ${SRC_DB};" > ${DESCRIBE}
for tbl in ${TABLES}; do
    echo "SELECT \"--- OBJECT:${tbl}:---\"; SHOW CREATE TABLE ${tbl}; SELECT \"--- DESCRIBE FORMATTED ---\"; DESCRIBE FORMATTED ${tbl}; SELECT \"+++ OBJECT:${tbl}:+++\";"
done >> ${DESCRIBE}
BeeLine "${SRC_JDBC}" "" describe.hql > ${OBJ_INFO}

OBJECTS=$(awk -F: '/^--- OBJECT:/ {print $2}' ${OBJ_INFO})
for obj in ${OBJECTS}; do
    sed -n '/--- OBJECT:'${obj}':---/,/+++ OBJECT:'${obj}':+++/p' ${OBJ_INFO} > ${obj}_${OBJ_INFO}
    procObj ${obj}_${OBJ_INFO} &
done
exit 0
#EOF
