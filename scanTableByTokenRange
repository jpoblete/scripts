#!/bin/bash
#
# Scan a keyspace.table by local token range
#
# Assumptions:
#
# * Cassandra is running
# * The following is known
#
USR=cassandra
PWD=cassandra
KSP=my_keyspace
SRC=my_table
COL="col1, col2, col3"
PKY="col1"
#
# CQLSH invoke
#
TIMEOUT="1800"
CQLSH="cqlsh -u ${USR} -p ${PWD} -k ${KSP} --request-timeout=${TIMEOUT}"

function getTokens(){
   for i in $($CQLSH -e "select tokens from system.local;" | awk -F, '/{/{print $0}' | tr -d '{' | tr -d '}' | tr -d ','); do
       echo ${i//\'/}
   done | sort -n
   #
   # We need to split the token subranges if selects start to timeout
   #
}

function getDataByTokenRange(){
   i=0
   tokens=($(getTokens))
   while [ ${i} -lt ${#tokens[@]} ]; do 
         [ ${i} -eq 0 ]         && echo "SELECT ${COL} FROM ${SRC} WHERE token(${PKY}) <= ${tokens[i]};" 
         [ "${tokens[i+1]}" ]   && echo "SELECT ${COL} FROM ${SRC} WHERE token(${PKY}) >  ${tokens[i]} AND token(${PKY}) <= ${tokens[i+1]};"
         [ ! "${tokens[i+1]}" ] && echo "SELECT ${COL} FROM ${SRC} WHERE token(${PKY}) >  ${tokens[i]};"
         ((i++))
   done
} 

function cqlExec(){ 
  while IFS='' read -r cql || [[ -n "$line" ]]; do
    $CQLSH -e "CONSISTENCY LOCAL_ONE; $cql"                                                                \
    |awk -F\| '( !/LOCAL_ONE/ && !/'"${COL/, /|}"'/ && !/^\-+/ && !/^\([0-9]+ rows)/ && !/^$/ ){print $0}' 
  done < "$1"
}

main(){
   echo "Begin processing ..."
   getDataByTokenRange > getDataByTokenRange.ddl
   cqlExec getDataByTokenRange.ddl
   echo "End procesing"
}

main
